const express = require('express');
const { Session, ZosFiles } = require('@zowe/zos-files-for-zowe-sdk');
const https = require('https');
const fs = require('fs');
const path = require('path');

const app = express();
const port = 3000;

// Middleware to parse JSON bodies
app.use(express.json());

// Load client certificate and private key
const clientCert = fs.readFileSync(path.resolve(__dirname, 'certs/client-cert.pem'));
const clientKey = fs.readFileSync(path.resolve(__dirname, 'certs/client-key.pem'));
const caCert = fs.readFileSync(path.resolve(__dirname, 'certs/ca-cert.pem'));

// Create an HTTPS agent with the client certificate
const httpsAgent = new https.Agent({
  cert: clientCert,
  key: clientKey,
  ca: caCert,
  rejectUnauthorized: true  // Set to false if using self-signed certificates, though not recommended
});

app.get('/download-dataset', async (req, res) => {
  const zosmfBaseUrl = 'https://your-zosmf-url';  // Replace with your z/OSMF base URL
  const datasetName = 'YOUR.DATASET.NAME';  // Replace with the actual dataset name

  const zosSession = new Session({
    hostname: 'your-zosmf-url',  // Replace with your z/OSMF host
    port: 443,
    rejectUnauthorized: true,  // Ensure this is set correctly for your environment
    ca: caCert,
    cert: clientCert,
    key: clientKey,
    httpsAgent: httpsAgent
  });

  try {
    // Retrieve dataset content
    const datasetContent = await ZosFiles.download({
      session: zosSession,
      file: datasetName,
    });

    const filePath = path.join(__dirname, `${datasetName}.txt`);
    fs.writeFileSync(filePath, datasetContent);

    res.download(filePath, (err) => {
      if (err) {
        console.error('Error downloading the file:', err);
        res.status(500).send('Error downloading the file');
      } else {
        console.log('File downloaded successfully');
      }
    });
  } catch (error) {
    console.error('Error fetching the dataset:', error);
    res.status(500).send('Error fetching the dataset');
  }
});

app.listen(port, () => {
  console.log(`Server running at http://localhost:${port}`);
});