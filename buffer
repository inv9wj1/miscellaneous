axiosConnect
  .get("/getFileData2", {
    params: {
      fileName: fileName,
    },
    headers: {
      "Access-Control-Allow-Origin": "*", // Replace * with your allowed origins
      "Access-Control-Allow-Methods": "GET, POST, PUT, DELETE, OPTIONS",
      "Access-Control-Allow-Headers":
        "Origin, X-Requested-With, Content-Type, Accept, Authorization", // Add more headers if needed
      Authorization: `Bearer ${token}`, // Add the token here
    },
  })
  .then((response) => {
    // Handle success
    console.log(response.data);
    setVisible(true);

    // Increment modalCount first
    setModalCount((prevCount) => {
      const newCount = prevCount + 1;
      console.log("modal count is " + newCount);

      // Set the file content for the current modal
      setFileContent(
        typeof response.data !== "string"
          ? JSON.stringify(response.data)
          : response.data
      );

      // Handle minimizing the modal and assigning content to tabs
      if (newCount >= 5) {
        if (fileName1 === fileName) {
          setFileContent1(
            typeof response.data !== "string"
              ? JSON.stringify(response.data)
              : response.data
          );
          setVisible1(true);
        } else if (fileName2 === fileName) {
          setFileContent2(
            typeof response.data !== "string"
              ? JSON.stringify(response.data)
              : response.data
          );
          setVisible2(true);
        } else if (fileName3 === fileName) {
          setFileContent3(
            typeof response.data !== "string"
              ? JSON.stringify(response.data)
              : response.data
          );
          setVisible3(true);
        } else if (fileName4 === fileName) {
          setFileContent4(
            typeof response.data !== "string"
              ? JSON.stringify(response.data)
              : response.data
          );
          setVisible4(true);
        } else if (fileName5 === fileName) {
          setFileContent5(
            typeof response.data !== "string"
              ? JSON.stringify(response.data)
              : response.data
          );
          setVisible5(true);
        } else {
          // Assign content to the first available minimized modal
          if (!visible1) {
            setFileContent1(
              typeof response.data !== "string"
                ? JSON.stringify(response.data)
                : response.data
            );
            setVisible1(true);
            setFileName1(fileName);
          } else if (!visible2) {
            setFileContent2(
              typeof response.data !== "string"
                ? JSON.stringify(response.data)
                : response.data
            );
            setVisible2(true);
            setFileName2(fileName);
          } else if (!visible3) {
            setFileContent3(
              typeof response.data !== "string"
                ? JSON.stringify(response.data)
                : response.data
            );
            setVisible3(true);
            setFileName3(fileName);
          } else if (!visible4) {
            setFileContent4(
              typeof response.data !== "string"
                ? JSON.stringify(response.data)
                : response.data
            );
            setVisible4(true);
            setFileName4(fileName);
          } else if (!visible5) {
            setFileContent5(
              typeof response.data !== "string"
                ? JSON.stringify(response.data)
                : response.data
            );
            setVisible5(true);
            setFileName5(fileName);
          }
        }

        // Decrement modal count after assigning content
        return prevCount - 1;
      } else {
        // Handle initial modals based on the count
        switch (newCount) {
          case 0:
            setFileContent1(
              typeof response.data !== "string"
                ? JSON.stringify(response.data)
                : response.data
            );
            setVisible1(true);
            setFileName1(fileName);
            break;
          case 1:
            setFileContent2(
              typeof response.data !== "string"
                ? JSON.stringify(response.data)
                : response.data
            );
            setVisible2(true);
            setFileName2(fileName);
            break;
          case 2:
            setFileContent3(
              typeof response.data !== "string"
                ? JSON.stringify(response.data)
                : response.data
            );
            setVisible3(true);
            setFileName3(fileName);
            break;
          case 3:
            setFileContent4(
              typeof response.data !== "string"
                ? JSON.stringify(response.data)
                : response.data
            );
            setVisible4(true);
            setFileName4(fileName);
            break;
          case 4:
            setFileContent5(
              typeof response.data !== "string"
                ? JSON.stringify(response.data)
                : response.data
            );
            setVisible5(true);
            setFileName5(fileName);
            break;
          default:
            break;
        }
        return newCount;
      }
    });
  })
  .catch((err) => {
    // Handle error
    console.log(err);
  });
