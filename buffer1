const modalHmigrate = (
  <Modal
    title="Hmigrate a dataset"
    visible={visibleHmigrate}
    onCancel={() => setVisibleHmigrate(false)}
    footer={[
      <Button key="ok" type="primary" onClick={handleOnHmigrateButtonClick}>
        OK
      </Button>,
    ]}
  >
    Tape action will happen in the background!! You can continue your work.
  </Modal>
);



const modalHrecall = (
  <Modal
    title="Hrecall a dataset"
    visible={visibleHrecall}
    onCancel={() => setVisibleHrecall(false)}
    footer={[
      <Button key="ok" type="primary" onClick={handleOnHrecallButtonClick}>
        OK
      </Button>,
    ]}
  >
    Tape action will happen in the background!! You can continue your work.
  </Modal>
);




const modalHdelete = (
  <Modal
    title="Hdelete a dataset"
    visible={visibleHdelete}
    onCancel={() => setVisibleHdelete(false)}
    footer={[
      <Button key="ok" type="primary" onClick={handleOnHdeleteButtonClick}>
        OK
      </Button>,
    ]}
  >
    Tape action will happen in the background!! You can continue your work.
  </Modal>
);

const modalSubmit = (
  <Modal
    title="Submit a job"
    visible={visibleSubmit}
    onCancel={() => setVisibleSubmit(false)}
    footer={[
      <Button key="ok" type="primary" onClick={handleOnSubmitButtonClick}>
        OK
      </Button>,
      <Button key="cancel" onClick={() => setVisibleSubmit(false)}>
        Cancel
      </Button>,
    ]}
  >
    Are you sure, a valid JCL present in this file?
  </Modal>
);


const modalDelete = (
  <Modal
    title="Delete a dataset"
    visible={visibleDelete}
    onCancel={() => setVisibleDelete(false)}
    footer={[
      <Button key="ok" type="primary" onClick={handleOnDeleteButtonClick}>
        OK
      </Button>,
      <Button key="cancel" onClick={() => setVisibleDelete(false)}>
        Cancel
      </Button>,
    ]}
  >
    Are you sure to delete this dataset?
  </Modal>
);


const modalRename = (
  <Modal
    title="Rename a dataset"
    visible={visibleRename}
    onCancel={() => setVisibleRename(false)}
    footer={[
      <Button key="rename" type="primary" onClick={handleOnRenameButtonClick}>
        Rename
      </Button>,
    ]}
  >
    <Input
      placeholder="Enter new name"
      id="renameText"
      value={fileName}
      onChange={(e) => handleDataChangeRename(e)}
    />
  </Modal>
);
