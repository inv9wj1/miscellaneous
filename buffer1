router.post("/renameSingleFile", async (req, res) => {
  const authHeader = req.headers["authorization"];
  console.log("auth header is ", authHeader);
  const token = authHeader && authHeader.split(" ")[1];
  console.log("token value is ", token);

  if (!token) {
    return res.status(401).json({ message: "No token provided" });
  }

  try {
    const session = await createSession(token);
    console.log(session);

    console.log("fileName: ", req.body.fileName);
    console.log("fileNameOld: ", req.body.fileNameOld);
    console.log("isMember: ", req.body.isMember);
    console.log("folder: ", req.body.folderName);

    let command = `ex 'SYSSHR.ZOOPS.CLIST(SOOPS)' 'SOJOB'`;
    
    if (req.body.isMember) {
      console.log("performing rename dataset member");
      let response = await Rename.dataSetMember(
        session,
        req.body.folderName,
        req.body.fileNameOld,
        req.body.fileName
      );
      console.log(response);
      res.status(200).json(response);
    } else {
      console.log("performing rename dataset");
      let response = await Rename.dataSet(
        session,
        req.body.fileNameOld,
        req.body.fileName
      );
      console.log(response);
      res.status(200).json(response);
    }
  } catch (err) {
    console.log(err);
    res.status(500).json(err);
  }
});
